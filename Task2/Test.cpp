#include "doctest.h"
#include "FamilyTree.hpp"
#include <string>

using namespace std;
using namespace family;

TEST_CASE("place holder") {
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder
    CHECK(1 == 1); //place holder

}